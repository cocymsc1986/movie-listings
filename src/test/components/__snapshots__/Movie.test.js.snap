// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Movie component Should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Movie
    genreLabels={
        Array [
            "test",
          ]
    }
    imagePath="path/to/image"
    movieKey={1}
    title="test-title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="movies__image"
>
          <img
                    alt="test-title"
                    src="https://image.tmdb.org/t/p/w200/path/to/image"
          />
</div>,
        <div>
          <div
                    className="movies__title"
          >
                    <h3>
                              test-title
                    </h3>
          </div>
          <div
                    className="movies__genre-labels"
          >
                    <Label
                              label="test"
                    />
          </div>
</div>,
      ],
      "className": "movies__result",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="test-title"
            src="https://image.tmdb.org/t/p/w200/path/to/image"
/>,
          "className": "movies__image",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "test-title",
            "src": "https://image.tmdb.org/t/p/w200/path/to/image",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="movies__title"
>
              <h3>
                            test-title
              </h3>
</div>,
            <div
              className="movies__genre-labels"
>
              <Label
                            label="test"
              />
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h3>
                test-title
</h3>,
              "className": "movies__title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test-title",
              },
              "ref": null,
              "rendered": "test-title",
              "type": "h3",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Label
                  label="test"
/>,
              ],
              "className": "movies__genre-labels",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "function",
                "props": Object {
                  "label": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="movies__image"
>
            <img
                        alt="test-title"
                        src="https://image.tmdb.org/t/p/w200/path/to/image"
            />
</div>,
          <div>
            <div
                        className="movies__title"
            >
                        <h3>
                                    test-title
                        </h3>
            </div>
            <div
                        className="movies__genre-labels"
            >
                        <Label
                                    label="test"
                        />
            </div>
</div>,
        ],
        "className": "movies__result",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="test-title"
              src="https://image.tmdb.org/t/p/w200/path/to/image"
/>,
            "className": "movies__image",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "test-title",
              "src": "https://image.tmdb.org/t/p/w200/path/to/image",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="movies__title"
>
                <h3>
                                test-title
                </h3>
</div>,
              <div
                className="movies__genre-labels"
>
                <Label
                                label="test"
                />
</div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h3>
                  test-title
</h3>,
                "className": "movies__title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test-title",
                },
                "ref": null,
                "rendered": "test-title",
                "type": "h3",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Label
                    label="test"
/>,
                ],
                "className": "movies__genre-labels",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "label": "test",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
